/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storms, StormsInterface } from "../Storms";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_artifactAdress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "storm",
        type: "string",
      },
    ],
    name: "StormBegins",
    type: "event",
  },
  {
    inputs: [],
    name: "activeStorms",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stormName",
        type: "string",
      },
    ],
    name: "stormIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_storm",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "summon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620018e2380380620018e283398181016040528101906200008c9190620001d7565b620000ac620000a0620000f460201b60201c565b620000fc60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000251565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d18162000237565b92915050565b600060208284031215620001ea57600080fd5b6000620001fa84828501620001c0565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002428162000203565b81146200024e57600080fd5b50565b61168180620002616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b8578063ae17cbfe146100d6578063de5a1ccf14610106578063f2fde38b146101225761007d565b80633ccfd60b1461008257806344d1992c1461008c578063715018a6146100ae575b600080fd5b61008a61013e565b005b610094610209565b6040516100a59594939291906110f6565b60405180910390f35b6100b66102bd565b005b6100c0610345565b6040516100cd9190611097565b60405180910390f35b6100f060048036038101906100eb9190610cb0565b61036e565b6040516100fd91906110db565b60405180910390f35b610120600480360381019061011b9190610cf5565b61039b565b005b61013c60048036038101906101379190610c87565b6108ae565b005b6101466109a6565b73ffffffffffffffffffffffffffffffffffffffff16610164610345565b73ffffffffffffffffffffffffffffffffffffffff16146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b1906111f2565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610205573d6000803e3d6000fd5b5050565b60008060008060004260036040516102209061102e565b9081526020016040518091039020541142600360405161023f9061106d565b9081526020016040518091039020541142600360405161025e90611082565b9081526020016040518091039020541142600360405161027d90611043565b9081526020016040518091039020541142600360405161029c90611058565b90815260200160405180910390205411945094509450945094509091929394565b6102c56109a6565b73ffffffffffffffffffffffffffffffffffffffff166102e3610345565b73ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610330906111f2565b60405180910390fd5b61034360006109ae565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260038484604051610383929190610ffe565b90815260200160405180910390205411905092915050565b4281116103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d490611232565b60405180910390fd5b61041d83836040518060400160405280600481526020017f6669726500000000000000000000000000000000000000000000000000000000815250610a72565b80610464575061046383836040518060400160405280600481526020017f73616e6400000000000000000000000000000000000000000000000000000000815250610a72565b5b806104ab57506104aa83836040518060400160405280600381526020017f6963650000000000000000000000000000000000000000000000000000000000815250610a72565b5b806104f257506104f183836040518060400160405280600481526020017f77696e6400000000000000000000000000000000000000000000000000000000815250610a72565b5b80610539575061053883836040518060400160405280600981526020017f6c696768746e696e670000000000000000000000000000000000000000000000815250610a72565b5b610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90611212565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105db9190611097565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610d8e565b905060005b818110156107835760008473ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b81526004016106759291906110b2565b60206040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190610d8e565b905060008573ffffffffffffffffffffffffffffffffffffffff166383196955836040518263ffffffff1660e01b81526004016107029190611252565b60006040518083038186803b15801561071a57600080fd5b505afa15801561072e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107579190610d4d565b9050610764898983610a72565b1561076e57600194505b5050808061077b906113a5565b915050610630565b50816107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb906111d2565b60405180910390fd5b6108486040518060400160405280600981526020017f53756d6d6f6e696e67000000000000000000000000000000000000000000000081525087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505086610ace565b836003878760405161085b929190610ffe565b9081526020016040518091039020819055507f0f54ab073e0daa386c22cd874a87237085ec95a377b9ff57c705846d24413788868660405161089e929190611149565b60405180910390a1505050505050565b6108b66109a6565b73ffffffffffffffffffffffffffffffffffffffff166108d4610345565b73ffffffffffffffffffffffffffffffffffffffff161461092a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610921906111f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561099a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610991906111b2565b60405180910390fd5b6109a3816109ae565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081604051602001610a859190611017565b604051602081830303815290604052805190602001208484604051602001610aae929190610ffe565b604051602081830303815290604052805190602001201490509392505050565b610b68838383604051602401610ae69392919061116d565b6040516020818303038152906040527ff362ca59000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610b6d565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000610ba9610ba484611292565b61126d565b905082815260208101848484011115610bc157600080fd5b610bcc848285611341565b509392505050565b600081359050610be38161161d565b92915050565b60008083601f840112610bfb57600080fd5b8235905067ffffffffffffffff811115610c1457600080fd5b602083019150836001820283011115610c2c57600080fd5b9250929050565b600082601f830112610c4457600080fd5b8151610c54848260208601610b96565b91505092915050565b600081359050610c6c81611634565b92915050565b600081519050610c8181611634565b92915050565b600060208284031215610c9957600080fd5b6000610ca784828501610bd4565b91505092915050565b60008060208385031215610cc357600080fd5b600083013567ffffffffffffffff811115610cdd57600080fd5b610ce985828601610be9565b92509250509250929050565b600080600060408486031215610d0a57600080fd5b600084013567ffffffffffffffff811115610d2457600080fd5b610d3086828701610be9565b93509350506020610d4386828701610c5d565b9150509250925092565b600060208284031215610d5f57600080fd5b600082015167ffffffffffffffff811115610d7957600080fd5b610d8584828501610c33565b91505092915050565b600060208284031215610da057600080fd5b6000610dae84828501610c72565b91505092915050565b610dc0816112ea565b82525050565b610dcf816112fc565b82525050565b6000610de183856112ce565b9350610dee838584611332565b610df78361144c565b840190509392505050565b6000610e0e83856112df565b9350610e1b838584611332565b82840190509392505050565b6000610e32826112c3565b610e3c81856112ce565b9350610e4c818560208601611341565b610e558161144c565b840191505092915050565b6000610e6b826112c3565b610e7581856112df565b9350610e85818560208601611341565b80840191505092915050565b6000610e9e6026836112ce565b9150610ea98261145d565b604082019050919050565b6000610ec16004836112df565b9150610ecc826114ac565b600482019050919050565b6000610ee46004836112df565b9150610eef826114d5565b600482019050919050565b6000610f076009836112ce565b9150610f12826114fe565b602082019050919050565b6000610f2a6009836112df565b9150610f3582611527565b600982019050919050565b6000610f4d6004836112df565b9150610f5882611550565b600482019050919050565b6000610f706020836112ce565b9150610f7b82611579565b602082019050919050565b6000610f936007836112ce565b9150610f9e826115a2565b602082019050919050565b6000610fb66008836112ce565b9150610fc1826115cb565b602082019050919050565b6000610fd96003836112df565b9150610fe4826115f4565b600382019050919050565b610ff881611328565b82525050565b600061100b828486610e02565b91508190509392505050565b60006110238284610e60565b915081905092915050565b600061103982610eb4565b9150819050919050565b600061104e82610ed7565b9150819050919050565b600061106382610f1d565b9150819050919050565b600061107882610f40565b9150819050919050565b600061108d82610fcc565b9150819050919050565b60006020820190506110ac6000830184610db7565b92915050565b60006040820190506110c76000830185610db7565b6110d46020830184610fef565b9392505050565b60006020820190506110f06000830184610dc6565b92915050565b600060a08201905061110b6000830188610dc6565b6111186020830187610dc6565b6111256040830186610dc6565b6111326060830185610dc6565b61113f6080830184610dc6565b9695505050505050565b60006020820190508181036000830152611164818486610dd5565b90509392505050565b600060608201905081810360008301526111878186610e27565b9050818103602083015261119b8185610e27565b90506111aa6040830184610fef565b949350505050565b600060208201905081810360008301526111cb81610e91565b9050919050565b600060208201905081810360008301526111eb81610efa565b9050919050565b6000602082019050818103600083015261120b81610f63565b9050919050565b6000602082019050818103600083015261122b81610f86565b9050919050565b6000602082019050818103600083015261124b81610fa9565b9050919050565b60006020820190506112676000830184610fef565b92915050565b6000611277611288565b90506112838282611374565b919050565b6000604051905090565b600067ffffffffffffffff8211156112ad576112ac61141d565b5b6112b68261144c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006112f582611308565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561135f578082015181840152602081019050611344565b8381111561136e576000848401525b50505050565b61137d8261144c565b810181811067ffffffffffffffff8211171561139c5761139b61141d565b5b80604052505050565b60006113b082611328565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113e3576113e26113ee565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6669726500000000000000000000000000000000000000000000000000000000600082015250565b7f77696e6400000000000000000000000000000000000000000000000000000000600082015250565b7f706f7765726c6573730000000000000000000000000000000000000000000000600082015250565b7f6c696768746e696e670000000000000000000000000000000000000000000000600082015250565b7f73616e6400000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6d79737465727900000000000000000000000000000000000000000000000000600082015250565b7f74656d706f72616c000000000000000000000000000000000000000000000000600082015250565b7f6963650000000000000000000000000000000000000000000000000000000000600082015250565b611626816112ea565b811461163157600080fd5b50565b61163d81611328565b811461164857600080fd5b5056fea26469706673582212206e803b2c83357ba21995b6bbedf0c341170869524a0a3ca7bfb907468d3f596864736f6c63430008040033";

export class Storms__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storms> {
    return super.deploy(_artifactAdress, overrides || {}) as Promise<Storms>;
  }
  getDeployTransaction(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_artifactAdress, overrides || {});
  }
  attach(address: string): Storms {
    return super.attach(address) as Storms;
  }
  connect(signer: Signer): Storms__factory {
    return super.connect(signer) as Storms__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StormsInterface {
    return new utils.Interface(_abi) as StormsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storms {
    return new Contract(address, _abi, signerOrProvider) as Storms;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storms, StormsInterface } from "../Storms";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_artifactAdress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "activeStorms",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stormName",
        type: "string",
      },
    ],
    name: "stormIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_storm",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "summon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620012413803806200124183398181016040528101906200008c9190620001d7565b620000ac620000a0620000f460201b60201c565b620000fc60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000251565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d18162000237565b92915050565b600060208284031215620001ea57600080fd5b6000620001fa84828501620001c0565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002428162000203565b81146200024e57600080fd5b50565b610fe080620002616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b8578063ae17cbfe146100d6578063de5a1ccf14610106578063f2fde38b146101225761007d565b80633ccfd60b1461008257806344d1992c1461008c578063715018a6146100ae575b600080fd5b61008a61013e565b005b610094610209565b6040516100a5959493929190610c6a565b60405180910390f35b6100b66102bd565b005b6100c0610345565b6040516100cd9190610c06565b60405180910390f35b6100f060048036038101906100eb9190610921565b61036e565b6040516100fd9190610c4f565b60405180910390f35b610120600480360381019061011b9190610966565b61039b565b005b61013c600480360381019061013791906108cf565b610626565b005b61014661071e565b73ffffffffffffffffffffffffffffffffffffffff16610164610345565b73ffffffffffffffffffffffffffffffffffffffff16146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b190610cfd565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610205573d6000803e3d6000fd5b5050565b600080600080600042600360405161022090610bc7565b9081526020016040518091039020541142600360405161023f90610b9d565b9081526020016040518091039020541142600360405161025e90610bdc565b9081526020016040518091039020541142600360405161027d90610bf1565b9081526020016040518091039020541142600360405161029c90610bb2565b90815260200160405180910390205411945094509450945094509091929394565b6102c561071e565b73ffffffffffffffffffffffffffffffffffffffff166102e3610345565b73ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090610cfd565b60405180910390fd5b6103436000610726565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260038484604051610383929190610b6d565b90815260200160405180910390205411905092915050565b4281116103a757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166324845721336040518263ffffffff1660e01b81526004016104079190610c21565b60206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045791906108f8565b610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610cdd565b60405180910390fd5b6104d684846040518060400160405280600481526020017f46495245000000000000000000000000000000000000000000000000000000008152506107ea565b8061051d575061051c84846040518060400160405280600481526020017f53414e44000000000000000000000000000000000000000000000000000000008152506107ea565b5b80610564575061056384846040518060400160405280600381526020017f49434500000000000000000000000000000000000000000000000000000000008152506107ea565b5b806105ab57506105aa84846040518060400160405280600481526020017f57494e44000000000000000000000000000000000000000000000000000000008152506107ea565b5b806105f257506105f184846040518060400160405280600981526020017f4c494748544e494e4700000000000000000000000000000000000000000000008152506107ea565b5b6105fb57600080fd5b816003858560405161060e929190610b6d565b90815260200160405180910390208190555050505050565b61062e61071e565b73ffffffffffffffffffffffffffffffffffffffff1661064c610345565b73ffffffffffffffffffffffffffffffffffffffff16146106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990610cfd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610712576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070990610cbd565b60405180910390fd5b61071b81610726565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000816040516020016107fd9190610b86565b604051602081830303815290604052805190602001208484604051602001610826929190610b6d565b604051602081830303815290604052805190602001201490509392505050565b60008135905061085581610f65565b92915050565b60008151905061086a81610f7c565b92915050565b60008083601f84011261088257600080fd5b8235905067ffffffffffffffff81111561089b57600080fd5b6020830191508360018202830111156108b357600080fd5b9250929050565b6000813590506108c981610f93565b92915050565b6000602082840312156108e157600080fd5b60006108ef84828501610846565b91505092915050565b60006020828403121561090a57600080fd5b60006109188482850161085b565b91505092915050565b6000806020838503121561093457600080fd5b600083013567ffffffffffffffff81111561094e57600080fd5b61095a85828601610870565b92509250509250929050565b60008060006040848603121561097b57600080fd5b600084013567ffffffffffffffff81111561099557600080fd5b6109a186828701610870565b935093505060206109b4868287016108ba565b9150509250925092565b6109c781610d44565b82525050565b6109d681610d56565b82525050565b60006109e88385610d39565b93506109f5838584610d8c565b82840190509392505050565b6000610a0c82610d1d565b610a168185610d39565b9350610a26818560208601610d9b565b80840191505092915050565b6000610a3f600483610d39565b9150610a4a82610dce565b600482019050919050565b6000610a62600983610d39565b9150610a6d82610df7565b600982019050919050565b6000610a85600483610d39565b9150610a9082610e20565b600482019050919050565b6000610aa8602683610d28565b9150610ab382610e49565b604082019050919050565b6000610acb600483610d28565b9150610ad682610e98565b602082019050919050565b6000610aee600983610d28565b9150610af982610ec1565b602082019050919050565b6000610b11600383610d39565b9150610b1c82610eea565b600382019050919050565b6000610b34600483610d39565b9150610b3f82610f13565b600482019050919050565b6000610b57602083610d28565b9150610b6282610f3c565b602082019050919050565b6000610b7a8284866109dc565b91508190509392505050565b6000610b928284610a01565b915081905092915050565b6000610ba882610a32565b9150819050919050565b6000610bbd82610a55565b9150819050919050565b6000610bd282610a78565b9150819050919050565b6000610be782610b04565b9150819050919050565b6000610bfc82610b27565b9150819050919050565b6000602082019050610c1b60008301846109be565b92915050565b6000604082019050610c3660008301846109be565b8181036020830152610c4781610abe565b905092915050565b6000602082019050610c6460008301846109cd565b92915050565b600060a082019050610c7f60008301886109cd565b610c8c60208301876109cd565b610c9960408301866109cd565b610ca660608301856109cd565b610cb360808301846109cd565b9695505050505050565b60006020820190508181036000830152610cd681610a9b565b9050919050565b60006020820190508181036000830152610cf681610ae1565b9050919050565b60006020820190508181036000830152610d1681610b4a565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610d4f82610d62565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610db9578082015181840152602081019050610d9e565b83811115610dc8576000848401525b50505050565b7f53414e4400000000000000000000000000000000000000000000000000000000600082015250565b7f4c494748544e494e470000000000000000000000000000000000000000000000600082015250565b7f4649524500000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6669726500000000000000000000000000000000000000000000000000000000600082015250565b7f706f7765726c6573730000000000000000000000000000000000000000000000600082015250565b7f4943450000000000000000000000000000000000000000000000000000000000600082015250565b7f57494e4400000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610f6e81610d44565b8114610f7957600080fd5b50565b610f8581610d56565b8114610f9057600080fd5b50565b610f9c81610d82565b8114610fa757600080fd5b5056fea2646970667358221220f4b8646aa0c512bf7811eea871e609b77f14b90823d1e05b2c3f171fd0e8c58564736f6c63430008040033";

export class Storms__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storms> {
    return super.deploy(_artifactAdress, overrides || {}) as Promise<Storms>;
  }
  getDeployTransaction(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_artifactAdress, overrides || {});
  }
  attach(address: string): Storms {
    return super.attach(address) as Storms;
  }
  connect(signer: Signer): Storms__factory {
    return super.connect(signer) as Storms__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StormsInterface {
    return new utils.Interface(_abi) as StormsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storms {
    return new Contract(address, _abi, signerOrProvider) as Storms;
  }
}

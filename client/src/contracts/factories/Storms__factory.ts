/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storms, StormsInterface } from "../Storms";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_artifactAdress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "storm",
        type: "string",
      },
    ],
    name: "StormBegins",
    type: "event",
  },
  {
    inputs: [],
    name: "activeStorms",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stormName",
        type: "string",
      },
    ],
    name: "stormIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_storm",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "summon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620012b3380380620012b383398181016040528101906200008c9190620001d7565b620000ac620000a0620000f460201b60201c565b620000fc60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000251565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d18162000237565b92915050565b600060208284031215620001ea57600080fd5b6000620001fa84828501620001c0565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002428162000203565b81146200024e57600080fd5b50565b61105280620002616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b8578063ae17cbfe146100d6578063de5a1ccf14610106578063f2fde38b146101225761007d565b80633ccfd60b1461008257806344d1992c1461008c578063715018a6146100ae575b600080fd5b61008a61013e565b005b610094610209565b6040516100a5959493929190610cd0565b60405180910390f35b6100b66102bd565b005b6100c0610345565b6040516100cd9190610c6c565b60405180910390f35b6100f060048036038101906100eb919061095a565b61036e565b6040516100fd9190610cb5565b60405180910390f35b610120600480360381019061011b919061099f565b61039b565b005b61013c60048036038101906101379190610908565b61065f565b005b610146610757565b73ffffffffffffffffffffffffffffffffffffffff16610164610345565b73ffffffffffffffffffffffffffffffffffffffff16146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b190610d87565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610205573d6000803e3d6000fd5b5050565b600080600080600042600360405161022090610c03565b9081526020016040518091039020541142600360405161023f90610c42565b9081526020016040518091039020541142600360405161025e90610c57565b9081526020016040518091039020541142600360405161027d90610c18565b9081526020016040518091039020541142600360405161029c90610c2d565b90815260200160405180910390205411945094509450945094509091929394565b6102c5610757565b73ffffffffffffffffffffffffffffffffffffffff166102e3610345565b73ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090610d87565b60405180910390fd5b610343600061075f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260038484604051610383929190610bd3565b90815260200160405180910390205411905092915050565b4281116103a757600080fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166324845721336040518263ffffffff1660e01b81526004016104079190610c87565b60206040518083038186803b15801561041f57600080fd5b505afa158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610931565b610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048d90610d67565b60405180910390fd5b6104d684846040518060400160405280600481526020017f6669726500000000000000000000000000000000000000000000000000000000815250610823565b8061051d575061051c84846040518060400160405280600481526020017f73616e6400000000000000000000000000000000000000000000000000000000815250610823565b5b80610564575061056384846040518060400160405280600381526020017f6963650000000000000000000000000000000000000000000000000000000000815250610823565b5b806105ab57506105aa84846040518060400160405280600481526020017f77696e6400000000000000000000000000000000000000000000000000000000815250610823565b5b806105f257506105f184846040518060400160405280600981526020017f6c696768746e696e670000000000000000000000000000000000000000000000815250610823565b5b6105fb57600080fd5b816003858560405161060e929190610bd3565b9081526020016040518091039020819055507f0f54ab073e0daa386c22cd874a87237085ec95a377b9ff57c705846d244137888484604051610651929190610d23565b60405180910390a150505050565b610667610757565b73ffffffffffffffffffffffffffffffffffffffff16610685610345565b73ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d290610d87565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561074b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074290610d47565b60405180910390fd5b6107548161075f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000816040516020016108369190610bec565b60405160208183030381529060405280519060200120848460405160200161085f929190610bd3565b604051602081830303815290604052805190602001201490509392505050565b60008135905061088e81610fd7565b92915050565b6000815190506108a381610fee565b92915050565b60008083601f8401126108bb57600080fd5b8235905067ffffffffffffffff8111156108d457600080fd5b6020830191508360018202830111156108ec57600080fd5b9250929050565b60008135905061090281611005565b92915050565b60006020828403121561091a57600080fd5b60006109288482850161087f565b91505092915050565b60006020828403121561094357600080fd5b600061095184828501610894565b91505092915050565b6000806020838503121561096d57600080fd5b600083013567ffffffffffffffff81111561098757600080fd5b610993858286016108a9565b92509250509250929050565b6000806000604084860312156109b457600080fd5b600084013567ffffffffffffffff8111156109ce57600080fd5b6109da868287016108a9565b935093505060206109ed868287016108f3565b9150509250925092565b610a0081610dce565b82525050565b610a0f81610de0565b82525050565b6000610a218385610db2565b9350610a2e838584610e16565b610a3783610e58565b840190509392505050565b6000610a4e8385610dc3565b9350610a5b838584610e16565b82840190509392505050565b6000610a7282610da7565b610a7c8185610dc3565b9350610a8c818560208601610e25565b80840191505092915050565b6000610aa5602683610db2565b9150610ab082610e69565b604082019050919050565b6000610ac8600483610db2565b9150610ad382610eb8565b602082019050919050565b6000610aeb600483610dc3565b9150610af682610eb8565b600482019050919050565b6000610b0e600483610dc3565b9150610b1982610ee1565b600482019050919050565b6000610b31600983610db2565b9150610b3c82610f0a565b602082019050919050565b6000610b54600983610dc3565b9150610b5f82610f33565b600982019050919050565b6000610b77600483610dc3565b9150610b8282610f5c565b600482019050919050565b6000610b9a602083610db2565b9150610ba582610f85565b602082019050919050565b6000610bbd600383610dc3565b9150610bc882610fae565b600382019050919050565b6000610be0828486610a42565b91508190509392505050565b6000610bf88284610a67565b915081905092915050565b6000610c0e82610ade565b9150819050919050565b6000610c2382610b01565b9150819050919050565b6000610c3882610b47565b9150819050919050565b6000610c4d82610b6a565b9150819050919050565b6000610c6282610bb0565b9150819050919050565b6000602082019050610c8160008301846109f7565b92915050565b6000604082019050610c9c60008301846109f7565b8181036020830152610cad81610abb565b905092915050565b6000602082019050610cca6000830184610a06565b92915050565b600060a082019050610ce56000830188610a06565b610cf26020830187610a06565b610cff6040830186610a06565b610d0c6060830185610a06565b610d196080830184610a06565b9695505050505050565b60006020820190508181036000830152610d3e818486610a15565b90509392505050565b60006020820190508181036000830152610d6081610a98565b9050919050565b60006020820190508181036000830152610d8081610b24565b9050919050565b60006020820190508181036000830152610da081610b8d565b9050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610dd982610dec565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610e43578082015181840152602081019050610e28565b83811115610e52576000848401525b50505050565b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6669726500000000000000000000000000000000000000000000000000000000600082015250565b7f77696e6400000000000000000000000000000000000000000000000000000000600082015250565b7f706f7765726c6573730000000000000000000000000000000000000000000000600082015250565b7f6c696768746e696e670000000000000000000000000000000000000000000000600082015250565b7f73616e6400000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6963650000000000000000000000000000000000000000000000000000000000600082015250565b610fe081610dce565b8114610feb57600080fd5b50565b610ff781610de0565b811461100257600080fd5b50565b61100e81610e0c565b811461101957600080fd5b5056fea26469706673582212206e48ffc990c08f40e794685f69177f5c289766a36656736a7d3551bbc714ee8a64736f6c63430008040033";

export class Storms__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storms> {
    return super.deploy(_artifactAdress, overrides || {}) as Promise<Storms>;
  }
  getDeployTransaction(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_artifactAdress, overrides || {});
  }
  attach(address: string): Storms {
    return super.attach(address) as Storms;
  }
  connect(signer: Signer): Storms__factory {
    return super.connect(signer) as Storms__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StormsInterface {
    return new utils.Interface(_abi) as StormsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storms {
    return new Contract(address, _abi, signerOrProvider) as Storms;
  }
}

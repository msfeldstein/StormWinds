/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storms, StormsInterface } from "../Storms";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum Storms.StormType",
        name: "",
        type: "uint8",
      },
    ],
    name: "StormBegins",
    type: "event",
  },
  {
    inputs: [],
    name: "activeStorms",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Storms.StormType",
        name: "_storm",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "summon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b5061008261007761008760201b60201c565b61008f60201b60201c565b610153565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a1d806101626000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633ccfd60b1461006757806344d1992c14610071578063715018a6146100935780638da5cb5b1461009d5780639e2efc02146100bb578063f2fde38b146100d7575b600080fd5b61006f6100f3565b005b6100796101be565b60405161008a9594939291906107c2565b60405180910390f35b61009b61037e565b005b6100a5610406565b6040516100b291906107a7565b60405180910390f35b6100d560048036038101906100d091906106f8565b61042f565b005b6100f160048036038101906100ec91906106cf565b6104cc565b005b6100fb6105c4565b73ffffffffffffffffffffffffffffffffffffffff16610119610406565b73ffffffffffffffffffffffffffffffffffffffff161461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016690610850565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101ba573d6000803e3d6000fd5b5050565b60008060008060004260026000806004811115610204577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060016004811115610259577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600260048111156102ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060036004811115610303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600480811115610357577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411945094509450945094509091929394565b6103866105c4565b73ffffffffffffffffffffffffffffffffffffffff166103a4610406565b73ffffffffffffffffffffffffffffffffffffffff16146103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190610850565b60405180910390fd5b61040460006105cc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b42811161043b57600080fd5b8060026000846004811115610479577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff168152602001908152602001600020819055507f04f8f9e90dd778496d9abf40fc80933cb654a1025a3a54c4d5c53588828a0f35826040516104c09190610815565b60405180910390a15050565b6104d46105c4565b73ffffffffffffffffffffffffffffffffffffffff166104f2610406565b73ffffffffffffffffffffffffffffffffffffffff1614610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610850565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610830565b60405180910390fd5b6105c1816105cc565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061069f816109a9565b92915050565b6000813590506106b4816109c0565b92915050565b6000813590506106c9816109d0565b92915050565b6000602082840312156106e157600080fd5b60006106ef84828501610690565b91505092915050565b6000806040838503121561070b57600080fd5b6000610719858286016106a5565b925050602061072a858286016106ba565b9150509250929050565b61073d81610881565b82525050565b61074c81610893565b82525050565b61075b816108dc565b82525050565b600061076e602683610870565b91506107798261091d565b604082019050919050565b6000610791602083610870565b915061079c8261096c565b602082019050919050565b60006020820190506107bc6000830184610734565b92915050565b600060a0820190506107d76000830188610743565b6107e46020830187610743565b6107f16040830186610743565b6107fe6060830185610743565b61080b6080830184610743565b9695505050505050565b600060208201905061082a6000830184610752565b92915050565b6000602082019050818103600083015261084981610761565b9050919050565b6000602082019050818103600083015261086981610784565b9050919050565b600082825260208201905092915050565b600061088c826108b2565b9050919050565b60008115159050919050565b60008190506108ad82610995565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e78261089f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600581106109a6576109a56108ee565b5b50565b6109b281610881565b81146109bd57600080fd5b50565b600581106109cd57600080fd5b50565b6109d9816108d2565b81146109e457600080fd5b5056fea26469706673582212202636902ccb5b844eb200b690bacbd2468ab9a59e7895164a20c82037feb5667764736f6c63430008040033";

export class Storms__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storms> {
    return super.deploy(overrides || {}) as Promise<Storms>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Storms {
    return super.attach(address) as Storms;
  }
  connect(signer: Signer): Storms__factory {
    return super.connect(signer) as Storms__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StormsInterface {
    return new utils.Interface(_abi) as StormsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storms {
    return new Contract(address, _abi, signerOrProvider) as Storms;
  }
}

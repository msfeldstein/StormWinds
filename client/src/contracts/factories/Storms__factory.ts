/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Storms, StormsInterface } from "../Storms";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_artifactAdress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "storm",
        type: "string",
      },
    ],
    name: "StormBegins",
    type: "event",
  },
  {
    inputs: [],
    name: "activeStorms",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_stormName",
        type: "string",
      },
    ],
    name: "stormIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_storm",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_endTime",
        type: "uint256",
      },
    ],
    name: "summon",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156200006657600080fd5b50604051620017183803806200171883398181016040528101906200008c9190620001d7565b620000ac620000a0620000f460201b60201c565b620000fc60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000251565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d18162000237565b92915050565b600060208284031215620001ea57600080fd5b6000620001fa84828501620001c0565b91505092915050565b6000620002108262000217565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620002428162000203565b81146200024e57600080fd5b50565b6114b780620002616000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100b8578063ae17cbfe146100d6578063de5a1ccf14610106578063f2fde38b146101225761007d565b80633ccfd60b1461008257806344d1992c1461008c578063715018a6146100ae575b600080fd5b61008a61013e565b005b610094610209565b6040516100a5959493929190610f71565b60405180910390f35b6100b66102bd565b005b6100c0610345565b6040516100cd9190610f12565b60405180910390f35b6100f060048036038101906100eb9190610b64565b61036e565b6040516100fd9190610f56565b60405180910390f35b610120600480360381019061011b9190610ba9565b61039b565b005b61013c60048036038101906101379190610b3b565b61082a565b005b610146610922565b73ffffffffffffffffffffffffffffffffffffffff16610164610345565b73ffffffffffffffffffffffffffffffffffffffff16146101ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b190611028565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610205573d6000803e3d6000fd5b5050565b600080600080600042600360405161022090610ea9565b9081526020016040518091039020541142600360405161023f90610ee8565b9081526020016040518091039020541142600360405161025e90610efd565b9081526020016040518091039020541142600360405161027d90610ebe565b9081526020016040518091039020541142600360405161029c90610ed3565b90815260200160405180910390205411945094509450945094509091929394565b6102c5610922565b73ffffffffffffffffffffffffffffffffffffffff166102e3610345565b73ffffffffffffffffffffffffffffffffffffffff1614610339576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033090611028565b60405180910390fd5b610343600061092a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60004260038484604051610383929190610e79565b90815260200160405180910390205411905092915050565b4281116103dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d490611068565b60405180910390fd5b61041d83836040518060400160405280600481526020017f66697265000000000000000000000000000000000000000000000000000000008152506109ee565b80610464575061046383836040518060400160405280600481526020017f73616e64000000000000000000000000000000000000000000000000000000008152506109ee565b5b806104ab57506104aa83836040518060400160405280600381526020017f69636500000000000000000000000000000000000000000000000000000000008152506109ee565b5b806104f257506104f183836040518060400160405280600481526020017f77696e64000000000000000000000000000000000000000000000000000000008152506109ee565b5b80610539575061053883836040518060400160405280600981526020017f6c696768746e696e6700000000000000000000000000000000000000000000008152506109ee565b5b610578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056f90611048565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016105db9190610f12565b60206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b9190610c42565b905060005b818110156107835760008473ffffffffffffffffffffffffffffffffffffffff16632f745c5933846040518363ffffffff1660e01b8152600401610675929190610f2d565b60206040518083038186803b15801561068d57600080fd5b505afa1580156106a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c59190610c42565b905060008573ffffffffffffffffffffffffffffffffffffffff166383196955836040518263ffffffff1660e01b81526004016107029190611088565b60006040518083038186803b15801561071a57600080fd5b505afa15801561072e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906107579190610c01565b90506107648989836109ee565b1561076e57600194505b5050808061077b906111db565b915050610630565b50816107c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bb90611008565b60405180910390fd5b83600387876040516107d7929190610e79565b9081526020016040518091039020819055507f0f54ab073e0daa386c22cd874a87237085ec95a377b9ff57c705846d24413788868660405161081a929190610fc4565b60405180910390a1505050505050565b610832610922565b73ffffffffffffffffffffffffffffffffffffffff16610850610345565b73ffffffffffffffffffffffffffffffffffffffff16146108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d90611028565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610916576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090d90610fe8565b60405180910390fd5b61091f8161092a565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081604051602001610a019190610e92565b604051602081830303815290604052805190602001208484604051602001610a2a929190610e79565b604051602081830303815290604052805190602001201490509392505050565b6000610a5d610a58846110c8565b6110a3565b905082815260208101848484011115610a7557600080fd5b610a80848285611177565b509392505050565b600081359050610a9781611453565b92915050565b60008083601f840112610aaf57600080fd5b8235905067ffffffffffffffff811115610ac857600080fd5b602083019150836001820283011115610ae057600080fd5b9250929050565b600082601f830112610af857600080fd5b8151610b08848260208601610a4a565b91505092915050565b600081359050610b208161146a565b92915050565b600081519050610b358161146a565b92915050565b600060208284031215610b4d57600080fd5b6000610b5b84828501610a88565b91505092915050565b60008060208385031215610b7757600080fd5b600083013567ffffffffffffffff811115610b9157600080fd5b610b9d85828601610a9d565b92509250509250929050565b600080600060408486031215610bbe57600080fd5b600084013567ffffffffffffffff811115610bd857600080fd5b610be486828701610a9d565b93509350506020610bf786828701610b11565b9150509250925092565b600060208284031215610c1357600080fd5b600082015167ffffffffffffffff811115610c2d57600080fd5b610c3984828501610ae7565b91505092915050565b600060208284031215610c5457600080fd5b6000610c6284828501610b26565b91505092915050565b610c7481611120565b82525050565b610c8381611132565b82525050565b6000610c958385611104565b9350610ca2838584611168565b610cab83611282565b840190509392505050565b6000610cc28385611115565b9350610ccf838584611168565b82840190509392505050565b6000610ce6826110f9565b610cf08185611115565b9350610d00818560208601611177565b80840191505092915050565b6000610d19602683611104565b9150610d2482611293565b604082019050919050565b6000610d3c600483611115565b9150610d47826112e2565b600482019050919050565b6000610d5f600483611115565b9150610d6a8261130b565b600482019050919050565b6000610d82600983611104565b9150610d8d82611334565b602082019050919050565b6000610da5600983611115565b9150610db08261135d565b600982019050919050565b6000610dc8600483611115565b9150610dd382611386565b600482019050919050565b6000610deb602083611104565b9150610df6826113af565b602082019050919050565b6000610e0e600783611104565b9150610e19826113d8565b602082019050919050565b6000610e31600883611104565b9150610e3c82611401565b602082019050919050565b6000610e54600383611115565b9150610e5f8261142a565b600382019050919050565b610e738161115e565b82525050565b6000610e86828486610cb6565b91508190509392505050565b6000610e9e8284610cdb565b915081905092915050565b6000610eb482610d2f565b9150819050919050565b6000610ec982610d52565b9150819050919050565b6000610ede82610d98565b9150819050919050565b6000610ef382610dbb565b9150819050919050565b6000610f0882610e47565b9150819050919050565b6000602082019050610f276000830184610c6b565b92915050565b6000604082019050610f426000830185610c6b565b610f4f6020830184610e6a565b9392505050565b6000602082019050610f6b6000830184610c7a565b92915050565b600060a082019050610f866000830188610c7a565b610f936020830187610c7a565b610fa06040830186610c7a565b610fad6060830185610c7a565b610fba6080830184610c7a565b9695505050505050565b60006020820190508181036000830152610fdf818486610c89565b90509392505050565b6000602082019050818103600083015261100181610d0c565b9050919050565b6000602082019050818103600083015261102181610d75565b9050919050565b6000602082019050818103600083015261104181610dde565b9050919050565b6000602082019050818103600083015261106181610e01565b9050919050565b6000602082019050818103600083015261108181610e24565b9050919050565b600060208201905061109d6000830184610e6a565b92915050565b60006110ad6110be565b90506110b982826111aa565b919050565b6000604051905090565b600067ffffffffffffffff8211156110e3576110e2611253565b5b6110ec82611282565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061112b8261113e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561119557808201518184015260208101905061117a565b838111156111a4576000848401525b50505050565b6111b382611282565b810181811067ffffffffffffffff821117156111d2576111d1611253565b5b80604052505050565b60006111e68261115e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561121957611218611224565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6669726500000000000000000000000000000000000000000000000000000000600082015250565b7f77696e6400000000000000000000000000000000000000000000000000000000600082015250565b7f706f7765726c6573730000000000000000000000000000000000000000000000600082015250565b7f6c696768746e696e670000000000000000000000000000000000000000000000600082015250565b7f73616e6400000000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f6d79737465727900000000000000000000000000000000000000000000000000600082015250565b7f74656d706f72616c000000000000000000000000000000000000000000000000600082015250565b7f6963650000000000000000000000000000000000000000000000000000000000600082015250565b61145c81611120565b811461146757600080fd5b50565b6114738161115e565b811461147e57600080fd5b5056fea26469706673582212202a762dfce5d7988dea0db7fe5eb70c6b9a44758fb8c76680a12afa0ae844305964736f6c63430008040033";

export class Storms__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Storms> {
    return super.deploy(_artifactAdress, overrides || {}) as Promise<Storms>;
  }
  getDeployTransaction(
    _artifactAdress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_artifactAdress, overrides || {});
  }
  attach(address: string): Storms {
    return super.attach(address) as Storms;
  }
  connect(signer: Signer): Storms__factory {
    return super.connect(signer) as Storms__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StormsInterface {
    return new utils.Interface(_abi) as StormsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Storms {
    return new Contract(address, _abi, signerOrProvider) as Storms;
  }
}

{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum Storms.StormType",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "StormBegins",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum Storms.StormType",
          "name": "_storm",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "name": "activate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeStorms",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf6529077208ccafaf96ace448503f08644180243059debb11a38af4b61d7de1b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "659080",
    "logsBloom": "0x
    "blockHash": "0x6b6a82e76b85a655cdfea046c292f912d9cf46cf15d6066ad951f53871625a9d",
    "transactionHash": "0xf6529077208ccafaf96ace448503f08644180243059debb11a38af4b61d7de1b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0xf6529077208ccafaf96ace448503f08644180243059debb11a38af4b61d7de1b",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x6b6a82e76b85a655cdfea046c292f912d9cf46cf15d6066ad951f53871625a9d"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "659080",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "bb2f35af6c5aec13ad9479863c508b1e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum Storms.StormType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"StormBegins\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum Storms.StormType\",\"name\":\"_storm\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"name\":\"activate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeStorms\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Storms.sol\":\"Storms\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Storms.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.0;\\n\\n\\n//  __ _                      __    __ _           _\\n// / _\\\\ |_ ___  _ __ _ __ ___/ / /\\\\ \\\\ (_)_ __   __| |___\\n// \\\\ \\\\| __/ _ \\\\| '__| '_ ` _ \\\\ \\\\/  \\\\/ / | '_ \\\\ / _` / __|\\n// _\\\\ \\\\ || (_) | |  | | | | | \\\\  /\\\\  /| | | | | (_| \\\\__ \\\\\\n// \\\\__/\\\\__\\\\___/|_|  |_| |_| |_|\\\\/  \\\\/ |_|_| |_|\\\\__,_|___/\\n// summoned by @msfeldstein\\n//\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Storms is Ownable {\\n    address lootAddress = 0xFF9C1b15B16263C61d017ee9F65C50e4AE0113D7;\\n    enum StormType {\\n        FIRE,\\n        SAND,\\n        ICE,\\n        WIND,\\n        LIGHTNING\\n    }\\n    event StormBegins(StormType);\\n    // The dates that the storms are active until\\n    mapping(uint8 => uint256) activeStormMapping;\\n\\n    function activeStorms()\\n        external\\n        view\\n        returns (\\n            bool, // fire\\n            bool, // sand\\n            bool, // ice\\n            bool, // wind\\n            bool // lightning\\n        )\\n    {\\n        return (\\n            activeStormMapping[uint8(StormType.FIRE)] > block.timestamp,\\n            activeStormMapping[uint8(StormType.SAND)] > block.timestamp,\\n            activeStormMapping[uint8(StormType.ICE)] > block.timestamp,\\n            activeStormMapping[uint8(StormType.WIND)] > block.timestamp,\\n            activeStormMapping[uint8(StormType.LIGHTNING)] > block.timestamp\\n        );\\n    }\\n\\n    function activate(StormType _storm, uint256 _endTime) external {\\n        require(_endTime > block.timestamp);\\n        activeStormMapping[uint8(_storm)] = _endTime;\\n        emit StormBegins(_storm);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint balance = address(this).balance;\\n        payable(msg.sender).transfer(balance);\\n    }\\n}\\n\",\"keccak256\":\"0xbd6d9c1095211f409e1274c4808dd7964de9debfa4174b4a62822cc0b535f233\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405273ff9c1b15b16263c61d017ee9f65c50e4ae0113d7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006557600080fd5b5061008261007761008760201b60201c565b61008f60201b60201c565b610153565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a1d806101626000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633ccfd60b1461006757806344d1992c146100715780635a678c9114610093578063715018a6146100af5780638da5cb5b146100b9578063f2fde38b146100d7575b600080fd5b61006f6100f3565b005b6100796101be565b60405161008a9594939291906107c2565b60405180910390f35b6100ad60048036038101906100a891906106f8565b61037e565b005b6100b761041b565b005b6100c16104a3565b6040516100ce91906107a7565b60405180910390f35b6100f160048036038101906100ec91906106cf565b6104cc565b005b6100fb6105c4565b73ffffffffffffffffffffffffffffffffffffffff166101196104a3565b73ffffffffffffffffffffffffffffffffffffffff161461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016690610850565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101ba573d6000803e3d6000fd5b5050565b60008060008060004260026000806004811115610204577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060016004811115610259577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600260048111156102ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060036004811115610303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600480811115610357577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411945094509450945094509091929394565b42811161038a57600080fd5b80600260008460048111156103c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff168152602001908152602001600020819055507f04f8f9e90dd778496d9abf40fc80933cb654a1025a3a54c4d5c53588828a0f358260405161040f9190610815565b60405180910390a15050565b6104236105c4565b73ffffffffffffffffffffffffffffffffffffffff166104416104a3565b73ffffffffffffffffffffffffffffffffffffffff1614610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90610850565b60405180910390fd5b6104a160006105cc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104d46105c4565b73ffffffffffffffffffffffffffffffffffffffff166104f26104a3565b73ffffffffffffffffffffffffffffffffffffffff1614610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610850565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610830565b60405180910390fd5b6105c1816105cc565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061069f816109a9565b92915050565b6000813590506106b4816109c0565b92915050565b6000813590506106c9816109d0565b92915050565b6000602082840312156106e157600080fd5b60006106ef84828501610690565b91505092915050565b6000806040838503121561070b57600080fd5b6000610719858286016106a5565b925050602061072a858286016106ba565b9150509250929050565b61073d81610881565b82525050565b61074c81610893565b82525050565b61075b816108dc565b82525050565b600061076e602683610870565b91506107798261091d565b604082019050919050565b6000610791602083610870565b915061079c8261096c565b602082019050919050565b60006020820190506107bc6000830184610734565b92915050565b600060a0820190506107d76000830188610743565b6107e46020830187610743565b6107f16040830186610743565b6107fe6060830185610743565b61080b6080830184610743565b9695505050505050565b600060208201905061082a6000830184610752565b92915050565b6000602082019050818103600083015261084981610761565b9050919050565b6000602082019050818103600083015261086981610784565b9050919050565b600082825260208201905092915050565b600061088c826108b2565b9050919050565b60008115159050919050565b60008190506108ad82610995565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e78261089f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600581106109a6576109a56108ee565b5b50565b6109b281610881565b81146109bd57600080fd5b50565b600581106109cd57600080fd5b50565b6109d9816108d2565b81146109e457600080fd5b5056fea2646970667358221220493ad6959dad1d7bb77df9f0ead0b387f926bdaccf322567ff3138e76d8e278664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633ccfd60b1461006757806344d1992c146100715780635a678c9114610093578063715018a6146100af5780638da5cb5b146100b9578063f2fde38b146100d7575b600080fd5b61006f6100f3565b005b6100796101be565b60405161008a9594939291906107c2565b60405180910390f35b6100ad60048036038101906100a891906106f8565b61037e565b005b6100b761041b565b005b6100c16104a3565b6040516100ce91906107a7565b60405180910390f35b6100f160048036038101906100ec91906106cf565b6104cc565b005b6100fb6105c4565b73ffffffffffffffffffffffffffffffffffffffff166101196104a3565b73ffffffffffffffffffffffffffffffffffffffff161461016f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016690610850565b60405180910390fd5b60004790503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156101ba573d6000803e3d6000fd5b5050565b60008060008060004260026000806004811115610204577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060016004811115610259577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600260048111156102ae577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411426002600060036004811115610303577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff16815260200190815260200160002054114260026000600480811115610357577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff1681526020019081526020016000205411945094509450945094509091929394565b42811161038a57600080fd5b80600260008460048111156103c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff1660ff168152602001908152602001600020819055507f04f8f9e90dd778496d9abf40fc80933cb654a1025a3a54c4d5c53588828a0f358260405161040f9190610815565b60405180910390a15050565b6104236105c4565b73ffffffffffffffffffffffffffffffffffffffff166104416104a3565b73ffffffffffffffffffffffffffffffffffffffff1614610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90610850565b60405180910390fd5b6104a160006105cc565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104d46105c4565b73ffffffffffffffffffffffffffffffffffffffff166104f26104a3565b73ffffffffffffffffffffffffffffffffffffffff1614610548576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053f90610850565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610830565b60405180910390fd5b6105c1816105cc565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061069f816109a9565b92915050565b6000813590506106b4816109c0565b92915050565b6000813590506106c9816109d0565b92915050565b6000602082840312156106e157600080fd5b60006106ef84828501610690565b91505092915050565b6000806040838503121561070b57600080fd5b6000610719858286016106a5565b925050602061072a858286016106ba565b9150509250929050565b61073d81610881565b82525050565b61074c81610893565b82525050565b61075b816108dc565b82525050565b600061076e602683610870565b91506107798261091d565b604082019050919050565b6000610791602083610870565b915061079c8261096c565b602082019050919050565b60006020820190506107bc6000830184610734565b92915050565b600060a0820190506107d76000830188610743565b6107e46020830187610743565b6107f16040830186610743565b6107fe6060830185610743565b61080b6080830184610743565b9695505050505050565b600060208201905061082a6000830184610752565b92915050565b6000602082019050818103600083015261084981610761565b9050919050565b6000602082019050818103600083015261086981610784565b9050919050565b600082825260208201905092915050565b600061088c826108b2565b9050919050565b60008115159050919050565b60008190506108ad82610995565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108e78261089f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600581106109a6576109a56108ee565b5b50565b6109b281610881565b81146109bd57600080fd5b50565b600581106109cd57600080fd5b50565b6109d9816108d2565b81146109e457600080fd5b5056fea2646970667358221220493ad6959dad1d7bb77df9f0ead0b387f926bdaccf322567ff3138e76d8e278664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Storms.sol:Storms",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 133,
        "contract": "contracts/Storms.sol:Storms",
        "label": "lootAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 148,
        "contract": "contracts/Storms.sol:Storms",
        "label": "activeStormMapping",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint8,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint8,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint8",
        "label": "mapping(uint8 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}